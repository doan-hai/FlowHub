#Application name
spring.application.name=flowhub-api
#Tomcat server
server.port=8000
server.servlet.context-path=/api
server.compression.enabled=true
server.error.whitelabel.enabled=false
server.tomcat.threads.max=200
server.tomcat.accept-count=100
server.tomcat.max-connections=10000
#header-size
server.max-http-request-header-size=8KB
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# datasource
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
spring.datasource.password=${DATASOURCE_PASSWORD:123456Aa@}
spring.datasource.hikari.schema=${DATASOURCE_SCHEMA:public}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=100
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=HikariCP
spring.datasource.hikari.keepalive-time=30000
spring.datasource.hikari.maxLifetime=600000
spring.datasource.hikari.connectionTimeout=30000
spring.jpa.properties.hibernate.jdbc.batch_size=500
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# jackson
spring.jackson.default-property-inclusion=non_null
spring.jackson.deserialization.read-unknown-enum-values-as-null=true
# graceful
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30S
# circuit breaker
spring.cloud.openfeign.circuitbreaker.enabled=true
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=50
resilience4j.timelimiter.configs.default.timeoutDuration=30S
resilience4j.timelimiter.configs.default.cancelRunningFuture=true
# actuator
management.endpoints.web.exposure.include=prometheus,info,health,metrics
management.endpoint.health.show-details=always
# swagger
springdoc.packages-to-scan=com.flowhub.business.controller
# logging
custom.properties.logging.kafka.topic=APPLICATION_LOG
custom.properties.logging.kafka.bootstrap-servers=${custom.properties.kafka.bootstrap-servers}
custom.properties.logging.exclude-response-body=false
logging.config=classpath:log4j.xml
#thread pool
custom.properties.service.thread.pool.task.executor=true
custom.properties.service.thread.pool.task.executor.core.pool.size=1
custom.properties.service.thread.pool.task.executor.max.pool.size=20
custom.properties.service.thread.pool.task.executor.queue.capacity=5000
# redis
spring.data.redis.connect-timeout=2S
spring.data.redis.repositories.enabled=false
spring.data.redis.lettuce.pool.enabled=true
spring.data.redis.client-type=lettuce
spring.data.redis.lettuce.pool.max-active=50
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_POST:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=${REDIS_DB:0}
#kafka
custom.properties.kafka.bootstrap-servers=${KAFKA_SERVER:localhost:9094}
custom.properties.messaging.consumer.pool.size=${KAFKA_CONSUMER_POOL:30}
custom.properties.messaging.consumer.pool.thread.name.prefix=messaging-thread-pool-
custom.properties.messaging.kafka.groupId=${spring.application.name}
custom.properties.messaging.kafka.consumer.batch=false
custom.properties.messaging.kafka.consumer.number.of.message.in.batch=1
custom.properties.kafka.comsumer.max.timeout=${KAFKA_CONSUMER_TIMEOUT:1800000}
custom.properties.graceful.shutdown.messaging.consumer.wait.time.max=300
custom.properties.kafka.topic.retries-event.name=RETRIES_EVENT
custom.properties.kafka.topic.example-event.name=EXAMPLE_EVENT
custom.properties.kafka.topic.example-event.concurrent.thread=4
custom.properties.kafka.topic.example-event-retries.name=${custom.properties.kafka.topic.example-event.name}.#{'${spring.application.name}'.toUpperCase()}.RETRIES
# secure
custom.properties.security.request.security-bean-name=securityRequest
custom.properties.security.request.private-key-checksum=checksum
custom.properties.security.request.private-key-encrypt=encrypt
custom.properties.rsa.private.key=${PRIVATE_KEY:MIICWwIBAAKBgQCXTYhgCoIskNpxdePba3CRFKJuDD0J20bntvZceJJmkWhkvB/np/oY+EGj/UtAHjtnxyxuQJ087zSn1oPxvkU0UIa5egBiZ6CP1R6bg+U5IwhmaL4+8XziUQ1RjAqjglovq+nPbKcMox3wwh3b0rMpkIdu6J0JoxSwGvGfwlL6OwIDAQABAoGABJeIzQlkm/+lcY4XZUBkgTK0H0zlyVfLVhr6bSIHp29AUNZYzYoOkBVwwI5ea0q/mM21rn7thrznxzQ+eubAaOKyVhunVFwt/lyk4wV42t0mYxj8JEf0fJCm5WU4olHgPxgBLlz9Nv/p4aPoJXtrKEtWVR5q5VtSrhUZ0cyJVOkCQQD/VFGkbguoochqi5X1KeiJd9qige4Kb7K7hPY8KXmF2/jLNQt0h0L6vzwHOmR1b0P1h5sMwfEfV/5wRgM+LabnAkEAl7NEcN2hlqoE/D1YZjRivz5mA9sbee/m+ZuoIrMEVoQClwzBHaHpsH5s8DN49v0k/qrSWLNapGyV5NvjxkjrjQJACGBVxVUu4Ltd/dDSfJaBYHEkJQyqKIF9lZVJFrQtnmyW/uOgmpQNaHh5masavJeH3Tgzp/l81ZBncnt5g8KvpQJAZhh9aGSRGwBEKKr0spxxFPre15uAC3nc/oK3DttigQOJZrVrxxCwYVtE4AgUUk4ettKqjI3w5BY8b3FaA5oSBQJAPq0EjwH5vXaTrQfizelpx/bNX1as68syCZZ9d7GAIqHk2/E+8aX8u43rB/zZIaq8DbqVbGTWZpX7e/vUKfs9lw==}
custom.properties.security.token.time-life=8H
# ratelimiter
resilience4j.ratelimiter.instances.commonReadRule.register-health-indicator=true
resilience4j.ratelimiter.instances.commonReadRule.limit-for-period=5
resilience4j.ratelimiter.instances.commonReadRule.limit-refresh-period=60s
resilience4j.ratelimiter.instances.commonReadRule.timeout-duration=0s
resilience4j.ratelimiter.instances.commonReadRule.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.commonReadRule.subscribe-for-events=true
resilience4j.ratelimiter.instances.commonReadRule.event-consumer-buffer-size=50
spring.servlet.multipart.max-file-size=1MB