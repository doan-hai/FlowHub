package com.flowhub.base.exception;

import lombok.AllArgsConstructor;
import lombok.Getter;
import org.springframework.http.HttpStatus;

/**
 * **Enum `CommonErrorDef` - ƒê·ªãnh nghƒ©a m√£ l·ªói chung trong h·ªá th·ªëng**
 *
 * <p>Enum n√†y t·∫≠p h·ª£p c√°c m√£ l·ªói chu·∫©n trong h·ªá th·ªëng, gi√∫p qu·∫£n l√Ω l·ªói
 * m·ªôt c√°ch nh·∫•t qu√°n v√† d·ªÖ d√†ng √°nh x·∫° l·ªói t·ªõi ph·∫£n h·ªìi API.</p>
 * <p>
 * **üìå C√°ch ho·∫°t ƒë·ªông:**
 * <p>Khi m·ªôt l·ªói x·∫£y ra trong h·ªá th·ªëng, ·ª©ng d·ª•ng c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c m√£ l·ªói
 * ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong `CommonErrorDef` ƒë·ªÉ ph·∫£n h·ªìi API v·ªõi th√¥ng tin c·ª• th·ªÉ.</p>
 * <p>
 * **üìå V√≠ d·ª• s·ª≠ d·ª•ng `CommonErrorDef` trong m·ªôt exception:**
 * <pre>
 * {@code
 * throw new BaseException(CommonErrorDef.NOT_FOUND, "Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu");
 * }
 * </pre>
 * <p>
 * **üìå V√≠ d·ª• ph·∫£n h·ªìi JSON khi x·∫£y ra l·ªói:**
 * <pre>
 * {
 *     "errorCode": "CM_0004",
 *     "message": "Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu",
 *     "httpStatus": 404
 * }
 * </pre>
 *
 * @author haidv
 * @version 1.0
 */
@AllArgsConstructor
@Getter
public enum CommonErrorDef implements AbstractError {
  BAD_REQUEST("CM_0001", HttpStatus.BAD_REQUEST),
  UNAUTHORIZED("CM_0002", HttpStatus.UNAUTHORIZED),
  FORBIDDEN("CM_0003", HttpStatus.FORBIDDEN),
  NOT_FOUND("CM_0004", HttpStatus.NOT_FOUND),
  METHOD_NOT_ALLOWED("CM_0005", HttpStatus.METHOD_NOT_ALLOWED),
  DATA_INTEGRITY_VIOLATION("CM_0006", HttpStatus.CONFLICT),
  MISSING_REQUEST_PARAMETER("CM_0007", HttpStatus.BAD_REQUEST),
  UNSUPPORTED_MEDIA_TYPE("CM_0008", HttpStatus.UNSUPPORTED_MEDIA_TYPE),
  MEDIA_TYPE_NOT_ACCEPTABLE("CM_0009", HttpStatus.UNSUPPORTED_MEDIA_TYPE),
  ARGUMENT_TYPE_MISMATCH("CM_0010", HttpStatus.BAD_REQUEST),
  ARGUMENT_NOT_VALID("CM_0011", HttpStatus.BAD_REQUEST),
  ENTITY_NOT_FOUND("CM_0012", HttpStatus.NOT_FOUND),
  INTERNAL_SERVER_ERROR("CM_0013", HttpStatus.INTERNAL_SERVER_ERROR),
  ACCESS_TOKEN_INVALID("CM_0014", HttpStatus.UNAUTHORIZED),
  ACCESS_TOKEN_EXPIRED("CM_0015", HttpStatus.UNAUTHORIZED),
  REFRESH_TOKEN_INVALID("CM_0016", HttpStatus.UNAUTHORIZED),
  REFRESH_TOKEN_EXPIRED("CM_0017", HttpStatus.UNAUTHORIZED),
  EXECUTE_THIRTY_SERVICE_ERROR("CM_0018", HttpStatus.INTERNAL_SERVER_ERROR),
  NOT_DECRYPT_SECURE_REQUEST("CM_0019", HttpStatus.BAD_REQUEST),
  NOT_ENCRYPT_SECURE_RESPONSE("CM_0020", HttpStatus.INTERNAL_SERVER_ERROR),
  SIGNATURE_INVALID("CM_0021", HttpStatus.UNAUTHORIZED),
  TOO_MANY_REQUESTS("CM_0022", HttpStatus.TOO_MANY_REQUESTS),
  MISSING_REQUEST_HEADER("CM_0023", HttpStatus.BAD_REQUEST),
  HTTP_MESSAGE_NOT_READABLE("CM_0024", HttpStatus.BAD_REQUEST),
  MISSING_REQUEST_PATH("CM_0025", HttpStatus.BAD_REQUEST),
  ;

  private final String errorCode;

  private final HttpStatus httpStatus;
}
