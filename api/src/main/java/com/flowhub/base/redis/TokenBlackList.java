package com.flowhub.base.redis;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.time.temporal.ChronoUnit;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * **L·ªõp `TokenBlackList` - Qu·∫£n l√Ω danh s√°ch token b·ªã v√¥ hi·ªáu h√≥a**
 *
 * <p>L·ªõp n√†y l∆∞u tr·ªØ c√°c token ƒë√£ b·ªã v√¥ hi·ªáu h√≥a (blacklist) ƒë·ªÉ ngƒÉn ch·∫∑n
 * vi·ªác s·ª≠ d·ª•ng l·∫°i c√°c token h·∫øt h·∫°n ho·∫∑c b·ªã thu h·ªìi.</p>
 * <p>
 * **üìå C√°ch ho·∫°t ƒë·ªông:**
 * <pre>
 * - Khi m·ªôt token b·ªã v√¥ hi·ªáu h√≥a, th√¥ng tin v·ªÅ `sessionId` v√† th·ªùi gian h·∫øt h·∫°n
 *   s·∫Ω ƒë∆∞·ª£c l∆∞u tr·ªØ trong Redis ho·∫∑c c∆° ch·∫ø l∆∞u tr·ªØ t·∫°m th·ªùi kh√°c.
 * - `expirationSeconds` gi√∫p x√°c ƒë·ªãnh kho·∫£ng th·ªùi gian c√≤n l·∫°i tr∆∞·ªõc khi token
 *   b·ªã x√≥a kh·ªèi danh s√°ch blacklist.
 * </pre>
 * **üìå V√≠ d·ª• s·ª≠ d·ª•ng:**
 * <pre>
 * {@code
 * LocalDateTime expiryTime = LocalDateTime.now().plusHours(1);
 * TokenBlackList blacklistedToken = new TokenBlackList("session-12345", expiryTime);
 * System.out.println(blacklistedToken.getExpirationSeconds()); // S·ªë gi√¢y c√≤n l·∫°i
 * }
 * </pre>
 *
 * @author haidv
 * @version 1.0
 */
@Setter
@Getter
@NoArgsConstructor
public class TokenBlackList implements Serializable {

  /** ID c·ªßa phi√™n l√†m vi·ªác (session) b·ªã v√¥ hi·ªáu h√≥a** */
  private String sessionId;

  /** Th·ªùi gian h·∫øt h·∫°n c·ªßa token t√≠nh theo gi√¢y** */
  private Long expirationSeconds;

  /** Th·ªùi gian c·ª• th·ªÉ khi token h·∫øt h·∫°n** */
  private LocalDateTime expiration;

  /**
   * **Constructor kh·ªüi t·∫°o ƒë·ªëi t∆∞·ª£ng `TokenBlackList`**
   *
   * <p>Ph∆∞∆°ng th·ª©c n√†y kh·ªüi t·∫°o m·ªôt b·∫£n ghi token b·ªã v√¥ hi·ªáu h√≥a v·ªõi `sessionId`
   * v√† th·ªùi gian h·∫øt h·∫°n (`expiration`). `expirationSeconds` ƒë∆∞·ª£c t√≠nh to√°n d·ª±a tr√™n kho·∫£ng th·ªùi
   * gian gi·ªØa th·ªùi ƒëi·ªÉm hi·ªán t·∫°i v√† `expiration`.</p>
   * <p>
   * **üìå V√≠ d·ª• s·ª≠ d·ª•ng:**
   * <pre>
   * {@code
   * LocalDateTime expiry = LocalDateTime.now().plusMinutes(30);
   * TokenBlackList blacklistedToken = new TokenBlackList("session-001", expiry);
   * System.out.println(blacklistedToken.getExpiration()); // Th·ªùi gian h·∫øt h·∫°n
   * }
   * </pre>
   *
   * @param sessionId  ID c·ªßa phi√™n l√†m vi·ªác b·ªã v√¥ hi·ªáu h√≥a.
   * @param expiration Th·ªùi ƒëi·ªÉm token h·∫øt h·∫°n.
   */
  public TokenBlackList(String sessionId, LocalDateTime expiration) {
    this.sessionId = sessionId;
    this.expirationSeconds = ChronoUnit.SECONDS.between(LocalDateTime.now(), expiration);
    this.expiration = expiration;
  }
}